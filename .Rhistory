slice_max(sim ,n=2,with_ties = F) %>% rbind(ind_aa) %>%
slice_max(sim,n=3,with_ties = F)
# Individual events: determine how each athlete places in the individual events we use the
# raw place and within country place to find this and calculate medals from this
event_fin_country = event_fin_all%>% filter(fullname %in% cur_team_names)%>%
group_by(Apparatus)%>% mutate(difference =
ifelse(!is.na(within_place-lag(within_place)),within_place-lag(within_place)-1,0))%>%
mutate(place=place-difference) %>% filter(place<=3)%>%group_by(place)%>%
summarise(medals = n())%>%arrange(desc(place))%>%as.vector()
ind_medals = event_fin_country$medals
names(ind_medals) = event_fin_country$place
ind_medals= ind_medals[c("1","2","3")]
ind_medals[is.na(ind_medals)] <- 0
medal_scores[j,] <- medal_scores[j,] + c(team_medals,
as.numeric(ind_aa_country[1:3,'Country']==c),
ind_medals) * weights
}
medal_scores
}
# stop cluster
stopCluster(cl)
# output what the number of medals for our score was
write.csv(medal_scores2/n, paste0("davidsims/scores-", paste(weights2,collapse="."),"-",c,"-", gender, ".csv"), row.names=FALSE)
write.csv(comb, paste0("davidsims/names-",paste(weights2,collapse="."),"-",c,"-", gender, ".csv"), row.names=FALSE)
# DM - the lines below don't do anything because they're inside the
# function, but they work as a way to consolidate the data frame in a
# separate R script (replacing paste with scores-w and names-w, obviously)
# scores <- read.csv(paste0("fullsims/scores-", paste(weights2,collapse="."),
#                           "-",c,"-",gender, ".csv"))
# scores$composite <- rowSums(scores)
# names <- read.csv(paste0("fullsims/names-",paste(weights2,collapse="."),"-",c,"-", gender, ".csv"))
# scores$name1 <- unlist(names[1,], use.names=FALSE)
# scores$name2 <- unlist(names[2,], use.names=FALSE)
# scores$name3 <- unlist(names[3,], use.names=FALSE)
# scores$name4 <- unlist(names[4,], use.names=FALSE)
# scores$name5 <- unlist(names[5,], use.names=FALSE)
print(max(rowSums(medal_scores2))/n)
return(comb[which.max(rowSums(medal_scores2))])
}
# Silencing some annoying messages
options("dplyr.summarise.inform" = F)
countries_men <- c('USA', 'CHN', 'JPN', 'GBR', 'ITA', 'ESP',
'BRA', 'KOR', 'GER', 'CAN', 'TUR', 'HUN')
countries_women <- c('USA', 'GBR', 'CAN', 'BRA', 'ITA', 'CHN',
'JPN', 'FRA', 'NED', 'HUN', 'ROU', 'BEL')
men_df <- data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'm', Country %in% countries_men) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>% mutate(fullname=paste(FirstName,LastName))
women_df <- data_2223 %>%
filter(Gender == 'w', Country %in% countries_women) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>% mutate(fullname=paste(FirstName,LastName))
#######
men_all_df = data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'm') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>%
mutate(fullname=paste(FirstName,LastName))
men_others =men_all_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0)%>%
filter(!(Country %in% countries_men))%>%
arrange(avg_score)%>%head(36)%>% select(FirstName,LastName) %>%left_join(men_all_df)%>%
mutate(fullname=paste(FirstName,LastName))
women_all_df = data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'w') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>%
mutate(fullname=paste(FirstName,LastName))
women_others =women_all_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0)%>%
filter(!(Country %in% countries_men))%>%
arrange(avg_score)%>%head(36)%>% select(FirstName,LastName) %>%left_join(men_all_df)%>%
mutate(fullname=paste(FirstName,LastName))
########
men_df_composite_top5 <- men_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0) %>%
group_by(Country) %>%slice_max(avg_score,n=3,with_ties = F) %>%
mutate(fullname = paste(FirstName, LastName))
women_df_composite_top5 <- women_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0) %>%
group_by(Country) %>%slice_max(avg_score,n=3,with_ties = F) %>%
mutate(fullname = paste(FirstName, LastName))
men_top5 <- men_df %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 3, with_ties = F) %>% ungroup() %>%
mutate(fullname = paste(FirstName, LastName))
men_top5_names <- men_top5 %>% rbind(men_df_composite_top5)%>%
select(FirstName, LastName, Country) %>% unique()
women_top5 <- women_df %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 4, with_ties = F)%>% ungroup()%>%
mutate(fullname = paste(FirstName, LastName))
women_top5_names <- women_top5 %>% rbind(women_df_composite_top5)%>%
select(FirstName, LastName, Country) %>% unique()
table(men_top5_names$Country)
table(women_top5_names$Country)
View(women_top5)
View(women_top5_names)
# --------SC-------
# If a combination contains 0 top 1 athletes for any event, exclude it
# we can change this to say how many top 1 athletes we require for a valid
# comb
contains_top_1<-function(comb,country_df,type="men"){
if(type=="men"){
min=1
}else{
min=1
}
top_1s = (country_df %>%group_by(Apparatus)%>%slice_max(avg_score,n=1,with_ties = F)%>%
ungroup()%>%select(fullname) %>% unique())[['fullname']]
return(length(intersect(as.vector(unlist(comb)),top_1s))>=min)
}
set.seed(123)
source('teampick.R')
weights_list <- list(c(1,1,1), c(1,2,3), c(1,3,2), c(2,1,3), c(2,3,1), c(3,1,2), c(3,2,1), c(2,1,1), c(1,2,1), c(1,1,2), c(3,1,1), c(1,3,1), c(1,1,3), c(2,2,1), c(2,1,2), c(1,2,2), c(3,3,1), c(3,1,3), c(1,3,3))
priority_list <- list(c(1,1,1), c(1,0,0), c(3,2,1))
weight_vectors <- list()
index <- 1
for (i in (1:19)) {
for (j in (1:3)) {
weight_vectors[[index]] <- as.vector(outer(priority_list[[j]], weights_list[[i]],"*"))
index <- index + 1
}
}
table(men_top5_names$Country)
# Time to pick!
source('./teampick.R')
#combine dfs
data_2223 <- rbind(data_2223,data_1721) (uncomment in the future if we deem it necessary)
# Separate data frames for men and women DONE
# Separate by apparatus DONE
# Remove duplicate rows
# Clean up names to match up athletes
# Clean up apparatus names (VT1 VT_1) DONE
# Separate qualifying & final (or superscore, etc)
# Do basic analysis based on the team
library(dplyr)
library(tidyr)
library(stringi)
library(stringr)
library(lubridate)
data_2223
# Remove spaces from names
data_2223$FirstName <- gsub(" ", "", data_2223$FirstName)
data_2223$LastName <- gsub(" ", "", data_2223$LastName)
source("~/Documents/GitHub/Gymnastics-Case-Study/prep.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/teampick.R")
# Silencing some annoying messages
options("dplyr.summarise.inform" = F)
countries_men <- c('USA', 'CHN', 'JPN', 'GBR', 'ITA', 'ESP',
'BRA', 'KOR', 'GER', 'CAN', 'TUR', 'HUN')
countries_women <- c('USA', 'GBR', 'CAN', 'BRA', 'ITA', 'CHN',
'JPN', 'FRA', 'NED', 'HUN', 'ROU', 'BEL')
men_df <- data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'm', Country %in% countries_men) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>% mutate(fullname=paste(FirstName,LastName))
women_df <- data_2223 %>%
filter(Gender == 'w', Country %in% countries_women) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>% mutate(fullname=paste(FirstName,LastName))
#######
men_all_df = data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'm') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>%
mutate(fullname=paste(FirstName,LastName))
men_others =men_all_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0)%>%
filter(!(Country %in% countries_men))%>%
arrange(avg_score)%>%head(36)%>% select(FirstName,LastName) %>%left_join(men_all_df)%>%
mutate(fullname=paste(FirstName,LastName))
women_all_df = data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'w') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>%
mutate(fullname=paste(FirstName,LastName))
women_others =women_all_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0)%>%
filter(!(Country %in% countries_men))%>%
arrange(avg_score)%>%head(36)%>% select(FirstName,LastName) %>%left_join(men_all_df)%>%
mutate(fullname=paste(FirstName,LastName))
########
men_df_composite_top5 <- men_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0) %>%
group_by(Country) %>%slice_max(avg_score,n=3,with_ties = F) %>%
mutate(fullname = paste(FirstName, LastName))
women_df_composite_top5 <- women_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0) %>%
group_by(Country) %>%slice_max(avg_score,n=3,with_ties = F) %>%
mutate(fullname = paste(FirstName, LastName))
men_top5 <- men_df %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 3, with_ties = F) %>% ungroup() %>%
mutate(fullname = paste(FirstName, LastName))
men_top5_names <- men_top5 %>% rbind(men_df_composite_top5)%>%
select(FirstName, LastName, Country) %>% unique()
women_top5 <- women_df %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 4, with_ties = F)%>% ungroup()%>%
mutate(fullname = paste(FirstName, LastName))
women_top5_names <- women_top5 %>% rbind(women_df_composite_top5)%>%
select(FirstName, LastName, Country) %>% unique()
table(men_top5_names$Country)
table(women_top5_names$Country)
source("~/Documents/GitHub/Gymnastics-Case-Study/get.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/prep.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/teampick.R")
# Silencing some annoying messages
options("dplyr.summarise.inform" = F)
countries_men <- c('USA', 'CHN', 'JPN', 'GBR', 'ITA', 'ESP',
'BRA', 'KOR', 'GER', 'CAN', 'TUR', 'HUN')
countries_women <- c('USA', 'GBR', 'CAN', 'BRA', 'ITA', 'CHN',
'JPN', 'FRA', 'NED', 'HUN', 'ROU', 'BEL')
men_df <- data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'm', Country %in% countries_men) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>% mutate(fullname=paste(FirstName,LastName))
women_df <- data_2223 %>%
filter(Gender == 'w', Country %in% countries_women) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>% mutate(fullname=paste(FirstName,LastName))
#######
men_all_df = data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'm') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>%
mutate(fullname=paste(FirstName,LastName))
men_others =men_all_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0)%>%
filter(!(Country %in% countries_men))%>%
arrange(avg_score)%>%head(36)%>% select(FirstName,LastName) %>%left_join(men_all_df)%>%
mutate(fullname=paste(FirstName,LastName))
women_all_df = data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'w') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>%
mutate(fullname=paste(FirstName,LastName))
women_others =women_all_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0)%>%
filter(!(Country %in% countries_men))%>%
arrange(avg_score)%>%head(36)%>% select(FirstName,LastName) %>%left_join(men_all_df)%>%
mutate(fullname=paste(FirstName,LastName))
########
men_df_composite_top5 <- men_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0) %>%
group_by(Country) %>%slice_max(avg_score,n=3,with_ties = F) %>%
mutate(fullname = paste(FirstName, LastName))
women_df_composite_top5 <- women_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0) %>%
group_by(Country) %>%slice_max(avg_score,n=3,with_ties = F) %>%
mutate(fullname = paste(FirstName, LastName))
men_top5 <- men_df %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 3, with_ties = F) %>% ungroup() %>%
mutate(fullname = paste(FirstName, LastName))
men_top5_names <- men_top5 %>% rbind(men_df_composite_top5)%>%
select(FirstName, LastName, Country) %>% unique()
women_top5 <- women_df %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 4, with_ties = F)%>% ungroup()%>%
mutate(fullname = paste(FirstName, LastName))
women_top5_names <- women_top5 %>% rbind(women_df_composite_top5)%>%
select(FirstName, LastName, Country) %>% unique()
table(men_top5_names$Country)
table(women_top5_names$Country)
source("~/Documents/GitHub/Gymnastics-Case-Study/get.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/prep.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/teampick.R")
# Silencing some annoying messages
options("dplyr.summarise.inform" = F)
countries_men <- c('USA', 'CHN', 'JPN', 'GBR', 'ITA', 'ESP',
'BRA', 'KOR', 'GER', 'CAN', 'TUR', 'HUN')
countries_women <- c('USA', 'GBR', 'CAN', 'BRA', 'ITA', 'CHN',
'JPN', 'FRA', 'NED', 'HUN', 'ROU', 'BEL')
men_df <- data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'm', Country %in% countries_men) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>% mutate(fullname=paste(FirstName,LastName))
women_df <- data_2223 %>%
filter(Gender == 'w', Country %in% countries_women) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>% mutate(fullname=paste(FirstName,LastName))
#######
men_all_df = data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'm') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>%
mutate(fullname=paste(FirstName,LastName))
men_others =men_all_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0)%>%
filter(!(Country %in% countries_men))%>%
arrange(avg_score)%>%head(36)%>% select(FirstName,LastName) %>%left_join(men_all_df)%>%
mutate(fullname=paste(FirstName,LastName))
women_all_df = data_2223 %>%
select(FirstName, LastName, Gender, Country, Apparatus, Score) %>%
drop_na() %>%
filter(Gender == 'w') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,sqrt(var(Score))),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))%>%
mutate(fullname=paste(FirstName,LastName))
women_others =women_all_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0)%>%
filter(!(Country %in% countries_men))%>%
arrange(avg_score)%>%head(36)%>% select(FirstName,LastName) %>%left_join(men_all_df)%>%
mutate(fullname=paste(FirstName,LastName))
########
men_df_composite_top5 <- men_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0) %>%
group_by(Country) %>%slice_max(avg_score,n=3,with_ties = F) %>%
mutate(fullname = paste(FirstName, LastName))
women_df_composite_top5 <- women_df%>% group_by(FirstName,LastName,Country) %>%
summarise(Apparatus = "AA",avg_score=sum(avg_score),var_score=0) %>%
group_by(Country) %>%slice_max(avg_score,n=3,with_ties = F) %>%
mutate(fullname = paste(FirstName, LastName))
men_top5 <- men_df %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 3, with_ties = F) %>% ungroup() %>%
mutate(fullname = paste(FirstName, LastName))
men_top5_names <- men_top5 %>% rbind(men_df_composite_top5)%>%
select(FirstName, LastName, Country) %>% unique()
women_top5 <- women_df %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 4, with_ties = F)%>% ungroup()%>%
mutate(fullname = paste(FirstName, LastName))
women_top5_names <- women_top5 %>% rbind(women_df_composite_top5)%>%
select(FirstName, LastName, Country) %>% unique()
table(men_top5_names$Country)
table(women_top5_names$Country)
# --------SC-------
# If a combination contains 0 top 1 athletes for any event, exclude it
# we can change this to say how many top 1 athletes we require for a valid
# comb
contains_top_1<-function(comb,country_df,type="men"){
if(type=="men"){
min=1
}else{
min=1
}
top_1s = (country_df %>%group_by(Apparatus)%>%slice_max(avg_score,n=1,with_ties = F)%>%
ungroup()%>%select(fullname) %>% unique())[['fullname']]
return(length(intersect(as.vector(unlist(comb)),top_1s))>=min)
}
# Initialize teams randomly
random_teams <- men_top5_names %>% group_by(Country) %>% sample_n(5) %>%
left_join(men_df) %>% arrange(FirstName, LastName)
team_roster <- random_teams
men_others
tm = Sys.time()
# Loop over countries one by one and go through each combination
for(weight_vector in weight_vectors){
for (country in rep(rev(countries_men), 2)){
print(country)
tm2 = Sys.time()
#current <- men_top5 %>%ungroup() %>%filter(Country == country)
current <- men_top5_names %>% filter(Country==country) %>%
left_join(men_df)
other_teams <- rbind(team_roster %>% filter(Country != country),men_others)
best_team <- team_pick(current, other_teams, weights = weight_vector,
gender='m')
print(best_team)
# Update team list with optimal team
team_roster <- rbind(other_teams,
men_df %>% filter(fullname %in% unlist(best_team)))
print(Sys.time()-tm2)
}
print(Sys.time()-tm)
}
# Time to pick!
source('./teampick.R')
# Initialize teams randomly
random_teams <- women_top5_names %>% group_by(Country) %>% sample_n(5) %>%
left_join(women_df) %>% arrange(FirstName, LastName)
combine dfs
source("~/Documents/GitHub/Gymnastics-Case-Study/get.data.r")
# Separate data frames for men and women DONE
# Separate by apparatus DONE
# Remove duplicate rows
# Clean up names to match up athletes
# Clean up apparatus names (VT1 VT_1) DONE
# Separate qualifying & final (or superscore, etc)
# Do basic analysis based on the team
library(dplyr)
library(tidyr)
library(stringi)
library(stringr)
library(lubridate)
data_2223
# Remove spaces from names
data_2223$FirstName <- gsub(" ", "", data_2223$FirstName)
data_2223$LastName <- gsub(" ", "", data_2223$LastName)
#Removing all accents
data_2223$LastName <- stri_trans_general(data_2223$LastName, "Latin-ASCII")
data_2223$FirstName <- stri_trans_general(data_2223$FirstName, "Latin-ASCII")
# Remove non A-Z characters from names
data_2223$FirstName <- gsub("[[:punct:]]", "", data_2223$FirstName)
data_2223$LastName <- gsub("[[:punct:]]", "", data_2223$LastName)
# Split when there are spaces in between first names we are only checking when
# first name and last name and country matches for a person
data_2223 = separate(data_2223, FirstName, into = c("FirstName", "OtherName"),
sep = "^\\S*\\K\\s+")
# Convert all names to upper case
data_2223$FirstName = toupper(data_2223$FirstName)
data_2223$LastName = toupper(data_2223$LastName)
# Rename columns so that the same event is grouped together
data_2223$Apparatus <- gsub("hb", "HB", data_2223$Apparatus)
data_2223$Apparatus <- gsub("VT_1", "VT1", data_2223$Apparatus)
data_2223$Apparatus <- gsub("VT_2", "VT2", data_2223$Apparatus)
data_2223$Apparatus <- gsub("VT1", "VT", data_2223$Apparatus)
data_2223$Apparatus <- gsub("VT2", "VT", data_2223$Apparatus)
# Special cases for country
data_2223$Country <- gsub("CCS", "GUA", data_2223$Country)
data_2223$Country <- gsub("ENG", "GBR", data_2223$Country)
data_2223$Country <- gsub("IOM", "GBR", data_2223$Country)
data_2223$Country <- gsub("JEY", "GBR", data_2223$Country)
data_2223$Country <- gsub("SCO", "GBR", data_2223$Country)
data_2223$Country <- gsub("WAL", "GBR", data_2223$Country)
data_2223$Country <- gsub("GE1", "GER", data_2223$Country)
data_2223$Country <- gsub("GE2", "GER", data_2223$Country)
data_2223$Country <- gsub("NIR", "IRL", data_2223$Country) # come back to this if there are new athletes cause they might not all be IRL
# Special cases for individuals
data_2223$LastName[data_2223$LastName=="ODRISCOL"]="ODRISCOLL"
data_2223 = data_2223 %>%
mutate(FirstName = ifelse(FirstName=="SAM"&LastName=="ZAKUTNEY","SAMUEL",FirstName))
source("~/Documents/GitHub/Gymnastics-Case-Study/prep.data.r")
