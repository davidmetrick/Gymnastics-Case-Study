data_2223 = separate(data_2223, FirstName, into = c("FirstName", "OtherName"),
sep = "^\\S*\\K\\s+")
#Removing all accents
apply(data_2223,2,function(x) stringi::stri_trans_general(x, "Latin-ASCII") )
# Convert all names to upper case
data_2223$FirstName = toupper(data_2223$FirstName)
data_2223$LastName = toupper(data_2223$LastName)
# Rename columns so that the same event is grouped together
data_2223$Apparatus <- gsub("hb", "HB", data_2223$Apparatus)
data_2223$Apparatus <- gsub("VT_1", "VT1", data_2223$Apparatus)
data_2223$Apparatus <- gsub("VT_2", "VT2", data_2223$Apparatus)
data_2223$Apparatus <- gsub("VT1", "VT", data_2223$Apparatus)
data_2223$Apparatus <- gsub("VT2", "VT", data_2223$Apparatus)
data_2223$Country <- gsub("CCS", "GUA", data_2223$Country)
data_2223$Country <- gsub("ENG", "GBR", data_2223$Country)
data_2223$Country <- gsub("IOM", "GBR", data_2223$Country)
data_2223$Country <- gsub("JEY", "GBR", data_2223$Country)
data_2223$Country <- gsub("SCO", "GBR", data_2223$Country)
data_2223$Country <- gsub("WAL", "GBR", data_2223$Country)
data_2223$Country <- gsub("GE1", "GER", data_2223$Country)
data_2223$Country <- gsub("GE2", "GER", data_2223$Country)
data_2223$Country <- gsub("NIR", "IRL", data_2223$Country) # come back to this if there are new athletes cause they might not all be IRL
data_2223$outlier <- (data_2223$LastName == "BARBOSA") + (data_2223$FirstName == "JADE")
data_2223[data_2223$outlier == 2,]$Country <- "BRA"
data_2223$outlier <- (data_2223$LastName == "DJORDJEVIC") + (data_2223$FirstName == "DUSAN")
data_2223[data_2223$outlier == 2,]$Country <- "SRB"
data_2223$outlier <- (data_2223$LastName == "GRÃœNBERG") + (data_2223$FirstName == "JERMAIN")
data_2223[data_2223$outlier == 2,]$Country <- "NED"
data_2223$outlier <- (data_2223$LastName == "JONASSON") + (data_2223$FirstName == "ARNTHOR")
data_2223[data_2223$outlier == 2,]$Country <- "ISL"
data_2223$outlier <- (data_2223$LastName == "LIMA") + (data_2223$FirstName == "ANA")
data_2223[data_2223$outlier == 2,]$Country <- "BRA"
data_2223$outlier <- (data_2223$LastName == "MEULEMAN") + (data_2223$FirstName == "CASEY-JANE")
data_2223[data_2223$outlier == 2,]$Country <- "NED"
data_2223$outlier <- (data_2223$LastName == "POGHOSYAN") + (data_2223$FirstName == "MANE")
data_2223[data_2223$outlier == 2,]$Country <- "ARM"
data_2223$outlier <- (data_2223$LastName == "RAPOSO") + (data_2223$FirstName == "CLARA")
data_2223[data_2223$outlier == 2,]$Country <- "CAN"
data_2223$outlier <- (data_2223$LastName == "TOVMASYAN") + (data_2223$FirstName == "ARTUR")
data_2223[data_2223$outlier == 2,]$Country <- "ARM"
data_2223$outlier <- (data_2223$LastName == "ZANETTI") + (data_2223$FirstName == "ARTHUR")
data_2223[data_2223$outlier == 2,]$Country <- "BRA"
data_2223 <- subset(data_2223, select = -outlier)
#Remove all duplicated rows
data_2223 = distinct(data_2223)
# Extract start dates and end dates
convertDate <- function(daterange){
daterange = gsub(",","",daterange)
dates = str_split(daterange,"-",simplify = T)
endDate = dmy(trimws(dates[2]))
start = str_split(trimws(dates[1])," ")[[1]]
if(length(start) ==1){
#print(paste(dates[1],format(as.Date(endDate, format="%d-%m-%Y"),"%m-%Y"),sep="-"))
startDate = dmy(paste(dates[1],format(as.Date(endDate, format="%d-%m-%Y"),"%m-%Y"),sep="-"))
}else if(length(start)==2){
startDate = dmy(paste(dates[1],format(as.Date(endDate, format="%d-%m-%Y"),"%Y"),sep="-"))
}else{
startDate = dmy(dates[1])
}
return(c(paste(startDate),paste(endDate)))
}
# Split data by gender
men <- data_2223[data_2223$Gender == "m",]
women <- data_2223[data_2223$Gender == "w",]
# Further split data by event (so split is now by event by gender)
apparatus_men = sort(unique(men$Apparatus))
apparatus_group_men = men %>% group_by(Apparatus)
events_m = group_split(apparatus_group_men)
for(event in events_m){
assign(paste(event$Apparatus[1],"m",sep="_"), event)
}
apparatus_women = sort(unique(women$Apparatus))
apparatus_group_women = women %>% group_by(Apparatus)
events_w = group_split(apparatus_group_women)
for(event in events_w){
assign(paste(event$Apparatus[1],"w",sep="_"), event)
}
# the names of the events for the different genders, we access the event data
# by gender by indicating the event and gender e.g. 'VT_w'
apparatus_men
apparatus_women
# Find athletes with missing countries to fill later by matching with existing athletes
data_2223 = data_2223 %>% group_by(FirstName,LastName) %>%
mutate(Country = sort(Country,decreasing=T)[1])
data_2223 |> filter(Country == '') |> select(LastName, FirstName, Country) |>
unique()
library(purrr)
library(tidyr)
options(dplyr.summarise.inform = FALSE)
# Choosing 12 countries for the men and women
countries_men <- c('CHN', 'JPN', 'GBR', 'ITA', 'USA', 'ESP',
'BRA', 'KOR', 'GER', 'CAN', 'TUR', 'HUN')
countries_women <- c('USA', 'GBR', 'CAN', 'BRA', 'ITA', 'CHN',
'JPN', 'FRA', 'NED', 'HUN', 'ROU', 'BEL')
men_df_unpivot = men_df <- data_2223 %>%
filter(Gender == 'm', Country %in% countries_men) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))
women_df_unpivot = men_df <- data_2223 %>%
filter(Gender == 'w', Country %in% countries_women) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))
men_df <- data_2223 %>%
filter(Gender == 'm') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>%
pivot_wider(names_from = Apparatus, values_from = c(avg_score, var_score)) %>%
select("FirstName", "LastName", "Country",
paste0(rep(c("avg_score_", "var_score_"), 8),
sort(rep(apparatus_men,2)))) %>% ungroup()
women_df <- data_2223 %>%
filter(Gender == 'w') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>%
pivot_wider(names_from = Apparatus, values_from = c(avg_score, var_score),
names_sort = T) %>%
select("FirstName", "LastName", "Country",
paste0(rep(c("avg_score_", "var_score_"), 4),
sort(rep(apparatus_women,2)))) %>% ungroup()
a=test %>% filter(Country %in% countries_men) %>%
group_by(Country,Apparatus)%>% slice_max(avg_score,n=10,with_ties = F) %>%ungroup()%>%
select(FirstName,LastName,Country)%>%unique()
table(a$Country)
women_df_unpivot = men_df <- data_2223 %>%
filter(Gender == 'w', Country %in% countries_women) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))
men_df <- data_2223 %>%
filter(Gender == 'm') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>%
pivot_wider(names_from = Apparatus, values_from = c(avg_score, var_score)) %>%
select("FirstName", "LastName", "Country",
paste0(rep(c("avg_score_", "var_score_"), 8),
sort(rep(apparatus_men,2)))) %>% ungroup()
women_df <- data_2223 %>%
filter(Gender == 'w') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>%
pivot_wider(names_from = Apparatus, values_from = c(avg_score, var_score),
names_sort = T) %>%
select("FirstName", "LastName", "Country",
paste0(rep(c("avg_score_", "var_score_"), 4),
sort(rep(apparatus_women,2)))) %>% ungroup()
library(dplyr)
library(purrr)
library(tidyr)
options(dplyr.summarise.inform = FALSE)
# Choosing 12 countries for the men and women
countries_men <- c('CHN', 'JPN', 'GBR', 'ITA', 'USA', 'ESP',
'BRA', 'KOR', 'GER', 'CAN', 'TUR', 'HUN')
countries_women <- c('USA', 'GBR', 'CAN', 'BRA', 'ITA', 'CHN',
'JPN', 'FRA', 'NED', 'HUN', 'ROU', 'BEL')
men_df_unpivot = men_df <- data_2223 %>%
filter(Gender == 'm', Country %in% countries_men) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))
women_df_unpivot = men_df <- data_2223 %>%
filter(Gender == 'w', Country %in% countries_women) %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15))
men_df <- data_2223 %>%
filter(Gender == 'm') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>%
pivot_wider(names_from = Apparatus, values_from = c(avg_score, var_score)) %>%
select("FirstName", "LastName", "Country",
paste0(rep(c("avg_score_", "var_score_"), 8),
sort(rep(apparatus_men,2)))) %>% ungroup()
women_df <- data_2223 %>%
filter(Gender == 'w') %>%
group_by(FirstName, LastName, Country, Apparatus) %>%
summarize(avg_score = mean(Score,na.rm=T),
var_score = ifelse(is.na(var(Score)),0,var(Score)),
Country=Country[1]) %>%
arrange(var_score) %>%
head(-floor(nrow(.)/15)) %>%
pivot_wider(names_from = Apparatus, values_from = c(avg_score, var_score),
names_sort = T) %>%
select("FirstName", "LastName", "Country",
paste0(rep(c("avg_score_", "var_score_"), 4),
sort(rep(apparatus_women,2)))) %>% ungroup()
# Fill in NAs and sum up composite score, order by composite score
men_df[is.na(men_df)] <- 0
men_df$composite_score <- rowSums(men_df%>% select(contains("avg_score")))
men_df <- men_df %>% arrange(desc(composite_score))
women_df[is.na(women_df)] <- 0
women_df$composite_score <- rowSums(women_df%>% select(contains("avg_score")))
women_df <- women_df %>% arrange(desc(composite_score))
teams_men <- men_df |> group_by(Country) |> group_nest() |>
filter(Country %in% countries_men) |>
mutate(top5 = purrr::map(data, ~ head(.x, 5)))
teams_women <- women_df |> group_by(Country) |> group_nest() |>
filter(Country %in% countries_women) |>
mutate(top5 = purrr::map(data, ~ head(.x, 5)))
teams_others_women <- women_df |>
filter(!Country %in% countries_women) |>
head(n=36)
teams_others_men <- men_df |>
filter(!Country %in% countries_men) |>
head(n=36)
View(teams_others_men)
qualifying_scores_women <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(qualifying_scores_women) <- c("FirstName","LastName","Country",
"Event","sim_score")
team_aa_qualifying <- data.frame("Country" = teams_women$Country,
"score" = 0)
#simulate countries
for(country in teams_women$Country){
print(country)
team = (teams_women%>% filter(Country == country))$top5[[1]]
top2 = team %>% head(2)
bot3 = team %>% tail(3)
for(event in apparatus_women){
top2_event = top2%>%select(FirstName,LastName,contains(event))
bot3_event_ordered = bot3 %>%
arrange(desc((eval(as.name(paste0("avg_score_",event)))))) %>%
head(2)
bot3_event = bot3_event_ordered %>%
select(FirstName,LastName,contains(event))
event_data = rbind(top2_event,bot3_event)
## change hard coding later
event_data$sim_score = rnorm(4,unlist(event_data[,3]),sqrt(unlist(event_data[,4])))
event_data$Country = country
event_data$event = event
# Think of how to restructure
qualifying_scores_women = rbind(qualifying_scores_women,
event_data%>%select(FirstName,LastName,Country,event,sim_score))
team_event_qual_score = sum(event_data %>% arrange(desc(sim_score)) %>%
head(3) %>%select(sim_score))
# add event score to team score
team_aa_qualifying <- team_aa_qualifying %>%
mutate(score = ifelse(Country == country,
score + team_event_qual_score,
score ))
}
}
#simulate individuals
for (event in apparatus_women){
others_women_ordered = teams_others_women %>%
arrange(desc((eval(as.name(paste0("avg_score_",event))))))
others_women_event = others_women_ordered %>%
select(FirstName,LastName,Country,contains(event))
others_women_event$sim_score = rnorm(nrow(others_women_event),
unlist(others_women_event[,4]),
unlist(others_women_event[,5]))
others_women_event$event = event
qualifying_scores_women= rbind(qualifying_scores_women,
others_women_event %>%
select(FirstName, LastName,
Country, event, sim_score))
}
qualifying_scores_women = qualifying_scores_women %>% group_by(event)%>%
arrange(desc(sim_score)) %>% group_nest()
get_qualifiers_ind = function(data,n=8){
#assumes data is ordered
data_max_2 = data %>% group_by(Country) %>% slice(1:2)%>%
arrange(desc(sim_score))
return(data_max_2%>%head(n))
}
qualified = qualifying_scores_women
qualified$data = lapply(qualified$data,get_qualifiers_ind)
# find athletes who participated in everything and sort them by composite score
aa_athletes = qualifying_scores_women %>% unnest(data) %>%
group_by(FirstName,LastName,Country)%>%
filter(n()==4) %>%
summarise(sim_score = sum(sim_score)) %>%
arrange(desc(sim_score))
aa_qualified = get_qualifiers_ind(aa_athletes,24)
team_aa_qualifying = team_aa_qualifying %>% arrange(desc(score))
team_aa_qualified = team_aa_qualifying %>% arrange(desc(score))%>%head(8)
qualified
aa_qualified
team_aa_qualified
# Get all male competitors (teams + additional individuals)
comp_men <- rbind(teams_men %>% unnest(top5) %>% select(-data),
teams_others_men)
# Getting simulated scores for each apparatus per person
m_sim <- inner_join(
comp_men %>% select(FirstName, LastName, Country, composite_score, contains('avg')) %>%
pivot_longer(cols = contains('avg'),
names_to = 'apparatus',
names_prefix = 'avg_score_',
values_to = 'avg'),
comp_men %>% select(FirstName, LastName, Country, composite_score, contains('var')) %>%
pivot_longer(cols = contains('var'),
names_to = 'apparatus',
names_prefix = 'var_score_',
values_to = 'var'),
by = join_by(FirstName, LastName, Country, composite_score, apparatus)
) %>% mutate(sim = rnorm(n(), avg, sqrt(var)))
# Only men who compete as part of the team
men_team <- m_sim %>% filter(Country %in% countries_men)
# The top 2 best men per country are kept to compete in everything
top2_men <- men_team %>% select(FirstName, LastName, Country, composite_score) %>%
unique() %>% group_by(Country) %>%
slice_max(composite_score, n=2, with_ties = F)
# pick best 2 out of the remaining 3 men per team
m_team_qual_2 <- men_team %>% anti_join(top2_men) %>%
group_by(Country, apparatus) %>%
slice_max(sim, n = 2, with_ties = F)
# Simulate team competition by picking top 3 competitors per event per team
# and sum them up ("4 up 3 count")
team_qual_m <- rbind(men_team %>% semi_join(top2_men), m_team_qual_2) %>%
group_by(Country, apparatus) %>% slice_max(sim, n = 3, with_ties = F) %>%
summarise(score = sum(sim)) %>% group_by(Country) %>%
summarise(score = sum(score))
# All around qualifier
# Find men who competed in everything and sort by summed score
aa_qual_m <- rbind(men_team %>% semi_join(top2_men), m_team_qual_2) %>%
group_by(FirstName, LastName, Country) %>%
filter(n() == 6) %>% summarise(sum_score = sum(sim)) %>%
arrange(desc(sum_score)) %>% group_by(Country) %>%
slice_max(sum_score, n = 2, with_ties = F) %>%
arrange(desc(sum_score)) %>% head(24)
event_qual_m <- m_sim %>% group_by(Country, apparatus) %>%
slice_max(sim, n = 2, with_ties = F) %>% group_by(apparatus) %>%
slice_max(sim, n = 8, with_ties = F) %>%
arrange(apparatus, desc(sim)) %>%
select(FirstName, LastName, Country, apparatus, sim)
team_final_m <- team_qual_m %>% arrange(desc(score)) %>% head(8)
team_final_m
############
men_top5 <- men_df_unpivot %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 5, with_ties = F) %>% ungroup() %>%
select(FirstName, LastName, Country) %>%
unique()
women_top5 <- women_df_unpivot %>%
group_by(Country, Apparatus) %>%
slice_max(avg_score, n = 5, with_ties = F) %>% ungroup() %>%
select(FirstName, LastName, Country) %>%
unique()
table(men_top5$Country)
table(women_top5$Country)
men_top5
View(men_top5)
View(men_df)
men_top5 %>% filter(Country == "BRA")
men_top5 %>% filter(Country == "USA")
men_top5_country_groups <- men %>% group_by(Country)
men_top5_countries <- group_split(men_top5_country_groups)
i <- 1
for (country in men_top5_countries) {
assign(countries_men[i], country)
i <- i + 1
}
men_top5_countries
men_top5_country_groups <- men_top5 %>% group_by(Country)
men_top5_countries <- group_split(men_top5_country_groups)
i <- 1
for (country in men_top5_countries) {
assign(countries_men[i], country)
i <- i + 1
}
names(men_top5_countries)
men_top5_countries
men_top5_country_groups <- men_top5 %>% group_by(Country)
men_top5_countries <- group_split(men_top5_country_groups)
men_top5_countries
men_top5_countries[1]
countries_men
men_top5_countries[1]
men_top5_countries[1]$Country
men_top5_countries[1]$Country[1]
men_top5_countries[1]
men_top5_countries[1][1]$Country
men_top5_countries[1][1]
men_top5_countries[1][1][1]
men_top5_countries[1][1][1]$Country
men_top5_countries[[1]]
men_top5_countries[[1]][1]
men_top5_countries[[1]]$Country
men_top5_countries[[1]]$Country[1]
men_top5_country_groups <- men_top5 %>% group_by(Country)
men_top5_countries <- group_split(men_top5_country_groups)
for (country in men_top5_countries) {
assign(country$Country[1], country)
}
men_top5_countries$BRA
men_top5_countries
for (country in men_top5_countries) {
assign(paste(country$Country[1]), country)
}
men_top5_countries
men_top5_countries[["BRA"]]
men_top5_countries[1]$Country[1]
for (country in men_top5_countries) {
print(country)
assign(paste(country$Country[1]), country)
}
for (country in men_top5_countries) {
print(country)
assign(paste(country[1]$Country[1]), country)
}
for (country in men_top5_countries) {
assign(paste(country$Country[1]), country)
}
men_top5_countries
names(men_top5_countries) <- c("BRA", "CAN", "CHN", "ESP", "GBR", "GER", "HUN", "ITA", "JPN", "KOR", "TUR", "USA")
men_top5_countries
men_top5_countries$USA
View(men_top5_countries$USA)
women_top5_country_groups <- women_top5 %>% group_by(Country)
women_top5_countries <- group_split(women_top5_country_groups)
women_top5_countries
names(women_top5_countries) <- c("BEL", "BRA", "CAN", "CHN", "FRA", "GBR", "HUN", "ITA", "JPN", "NED", "ROU", "USA")
women_top5_countries
women_top5_countries$USA
View(women_top5_countries$USA)
View(men_df)
View(men_top5_countries$USA)
dplyr::left_join(men_top5_countries$USA, men_df, by="sp")
dplyr::left_join(men_top5_countries$USA, men_df)
View(men_top5_countries$USA)
for (country in men_top5_countries) {
dplyr::left_join(country, men_df)
}
for (country in women_top5_countries) {
dplyr::left_join(country, women_df)
}
View(men_top5_countries$USA)
for (country in men_top5_countries) {
country <- dplyr::left_join(country, men_df)
}
for (country in women_top5_countries) {
country <- dplyr::left_join(country, women_df)
}
View(men_top5_countries$USA)
View(men_top5_countries$USA)
View(dplyr::left_join(men_top5_countries$USA, men_df))
men_top5_countries[1]
ncol(men_top5_countries)
for (i in 1:12) {
men_top5_countries[i] <- dplyr::left_join(men_top5_countries[i], men_df)
women_top5_countries[i] <- dplyr::left_join(women_top5_countries[i], women_df)
}
men_top5_countries$USA
for (name in names(men_top5_countries)) {
men_top5_countries$name <- dplyr::left_join(men_top5_countries$name, men_df)
#women_top5_countries[i] <- dplyr::left_join(women_top5_countries[i], women_df)
}
table(men_top5$Country)
table(women_top5$Country)
men_top5 <- dplyr::left_join(men_top5, men_df)
women_top5 <- dplyr::left_join(women_top5, women_df)
men_top5_country_groups <- men_top5 %>% group_by(Country)
men_top5_countries <- group_split(men_top5_country_groups)
names(men_top5_countries) <- c("BRA", "CAN", "CHN", "ESP", "GBR", "GER", "HUN", "ITA", "JPN", "KOR", "TUR", "USA")
women_top5_country_groups <- women_top5 %>% group_by(Country)
women_top5_countries <- group_split(women_top5_country_groups)
names(women_top5_countries) <- c("BEL", "BRA", "CAN", "CHN", "FRA", "GBR", "HUN", "ITA", "JPN", "NED", "ROU", "USA")
view(men_top5_countries$USA)
View(men_top5_countries$USA)
View(men_df[men_df$Country == "USA"])
View(men_df[men_df$Country == "USA",])
View(men_top5_countries$GBR)
View(women_top5_countries$USA)
source("~/Documents/GitHub/Gymnastics-Case-Study/get.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/prep.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/teampick.R")
source("~/Documents/GitHub/Gymnastics-Case-Study/simulationsfast.R")
source("~/Documents/GitHub/Gymnastics-Case-Study/simulationsfast.R")
team_roster <- random_teams
# Time to pick!
source('teampick.R')
getwd()
setwd("~/Documents/GitHub/Gymnastics-Case-Study")
source("~/Documents/GitHub/Gymnastics-Case-Study/get.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/prep.data.r")
source("~/Documents/GitHub/Gymnastics-Case-Study/teampick.R")
source("~/Documents/GitHub/Gymnastics-Case-Study/simulationsfast.R")
